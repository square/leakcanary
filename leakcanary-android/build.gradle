apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

dependencies {
  api project(':leakcanary-analyzer')
  // We don't need the latest version of AndroidX (there are no bugs that impact what LeakCanary
  // relies on), we're sticking a bit older because most apps will be using a more recent version
  // and they'll automatically resolve to higher version without having to necessarily resort to a
  // resolution strategy.
  //noinspection GradleDependency
  implementation 'androidx.core:core:1.0.1'
  implementation 'androidx.annotation:annotation:1.0.2'
  testImplementation 'junit:junit:4.12'
  api deps.kotlin.stdLib.jdk6
}

def gitSha() {
  return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
  resourcePrefix 'leak_canary_'
  compileSdkVersion versions.compileSdk
  defaultConfig {
    minSdkVersion versions.minSdk
    buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
    buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    consumerProguardFiles 'consumer-proguard-rules.pro'
  }
  lintOptions {
    disable 'GoogleAppIndexingWarning'
    error 'ObsoleteSdkInt'
    check 'Interoperability'
  }
}

apply from: rootProject.file('gradle/checkstyle.gradle')
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
