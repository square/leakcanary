plugins {
  id("com.android.library")
  id("org.jetbrains.kotlin.android")
}

dependencies {
  api project(':shark-android')
  api project(':leakcanary-object-watcher-android')
  api project(':leakcanary-object-watcher-android-androidx')
  api project(':leakcanary-object-watcher-android-support-fragments')
  implementation project(':plumber-android')

  implementation deps.kotlin.stdlib

  testImplementation deps.assertj_core
  testImplementation deps.junit
  testImplementation deps.kotlin.reflect
  testImplementation deps.mockito
  testImplementation deps.mockito_kotlin
  androidTestImplementation deps.androidx.test.espresso
  androidTestImplementation deps.androidx.test.rules
  androidTestImplementation deps.androidx.test.runner
  androidTestImplementation project(':shark-hprof-test')
}

def gitSha() {
  return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
  resourcePrefix 'leak_canary_'
  compileSdk versions.compileSdk
  defaultConfig {
    minSdk versions.minSdk
    buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
    buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    consumerProguardFiles 'consumer-proguard-rules.pro'
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  lintOptions {
    disable 'GoogleAppIndexingWarning'
    error 'ObsoleteSdkInt'
    checkOnly 'Interoperability'
  }
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
