name: Main

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v1

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Build project
        run: ./gradlew build --stacktrace

  instrumentation-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        include:
          - arch: x86
            target: google_apis
            os: android-4.4
            api-level: 19
          - arch: x86
            target: google_apis
            os: android-5.0
            api-level: 21
          - arch: x86_64
            target: google_apis
            os: android-11
            api-level: 30
          - arch: x86_64
            target: google_apis
            os: android-12
            api-level: 31
          - arch: x86_64
            target: google_apis
            os: android-13
            api-level: 33
          - arch: x86_64
            target: google_apis
            os: android-14
            api-level: 34
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cached-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.target }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          os: ${{ matrix.os }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-load
          disable-animations: true
          script: |
            echo "Waiting for emulator to be ready"
            adb wait-for-device
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0
            sleep 30
            echo "Generated AVD snapshot for caching."

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          os: ${{ matrix.os }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true
          script: |
            touch emulator.log                    # create log file
            chmod 777 emulator.log                # allow writing to log file
            adb logcat >> emulator.log &          # pipe all logcat messages into log file as a background process
            adb wait-for-device # Wait for emulator to be fully ready
            ./gradlew leakcanary:leakcanary-android-core:connectedCheck leakcanary:leakcanary-android:connectedCheck leakcanary:leakcanary-android-instrumentation:connectedCheck --no-build-cache --no-daemon --stacktrace
      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-instrumentation-test-results
          path: |
            emulator.log
            ./**/build/reports/androidTests/connected/**

  snapshot-deployment:
    if: github.repository == 'square/leakcanary' && github.event_name == 'push'
    needs: [ checks ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Deploy snapshot
        run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
      - name: Cleanup secrets
        if: always()
        run: rm -rf ~/.gradle/gradle.properties
